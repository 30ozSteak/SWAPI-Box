// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the screenshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="App-header"
        >
          <h1>
            swapi-box
          </h1>
        </header>,
        <div
          className="header-block"
        >
          <Header />
        </div>,
        <div
          className="twinkle"
        />,
        <div
          className="marquee-container"
        >
          <Marquee
            films={Array []}
          />
          <People
            people={Array []}
            planets={Array []}
            species={Array []}
          />
        </div>,
        <Menu
          data={
            Array [
              Object {
                "link": "#",
                "swLink": "People",
              },
              Object {
                "link": "#",
                "swLink": "Planets",
              },
              Object {
                "link": "#",
                "swLink": "Vehicles",
              },
              Object {
                "link": "#",
                "swLink": "Favorites",
              },
            ]
          }
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            swapi-box
          </h1>,
          "className": "App-header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "swapi-box",
          },
          "ref": null,
          "rendered": "swapi-box",
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Header />,
          "className": "header-block",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "twinkle",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Marquee
              films={Array []}
            />,
            <People
              people={Array []}
              planets={Array []}
              species={Array []}
            />,
          ],
          "className": "marquee-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "films": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "people": Array [],
              "planets": Array [],
              "species": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Array [
            Object {
              "link": "#",
              "swLink": "People",
            },
            Object {
              "link": "#",
              "swLink": "Planets",
            },
            Object {
              "link": "#",
              "swLink": "Vehicles",
            },
            Object {
              "link": "#",
              "swLink": "Favorites",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="App-header"
          >
            <h1>
              swapi-box
            </h1>
          </header>,
          <div
            className="header-block"
          >
            <Header />
          </div>,
          <div
            className="twinkle"
          />,
          <div
            className="marquee-container"
          >
            <Marquee
              films={Array []}
            />
            <People
              people={Array []}
              planets={Array []}
              species={Array []}
            />
          </div>,
          <Menu
            data={
              Array [
                Object {
                  "link": "#",
                  "swLink": "People",
                },
                Object {
                  "link": "#",
                  "swLink": "Planets",
                },
                Object {
                  "link": "#",
                  "swLink": "Vehicles",
                },
                Object {
                  "link": "#",
                  "swLink": "Favorites",
                },
              ]
            }
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              swapi-box
            </h1>,
            "className": "App-header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "swapi-box",
            },
            "ref": null,
            "rendered": "swapi-box",
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Header />,
            "className": "header-block",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "twinkle",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Marquee
                films={Array []}
              />,
              <People
                people={Array []}
                planets={Array []}
                species={Array []}
              />,
            ],
            "className": "marquee-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "films": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "people": Array [],
                "planets": Array [],
                "species": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Array [
              Object {
                "link": "#",
                "swLink": "People",
              },
              Object {
                "link": "#",
                "swLink": "Planets",
              },
              Object {
                "link": "#",
                "swLink": "Vehicles",
              },
              Object {
                "link": "#",
                "swLink": "Favorites",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
